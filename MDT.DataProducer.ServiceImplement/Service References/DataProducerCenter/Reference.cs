//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MDT.DataProducer.ServiceImplement.DataProducerCenter {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Source", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    [System.SerializableAttribute()]
    public partial class Source : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.TaskUnit[] MainTasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.TaskUnit[] PostTasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.Result[] ResultsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.TaskUnit[] MainTasks {
            get {
                return this.MainTasksField;
            }
            set {
                if ((object.ReferenceEquals(this.MainTasksField, value) != true)) {
                    this.MainTasksField = value;
                    this.RaisePropertyChanged("MainTasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.TaskUnit[] PostTasks {
            get {
                return this.PostTasksField;
            }
            set {
                if ((object.ReferenceEquals(this.PostTasksField, value) != true)) {
                    this.PostTasksField = value;
                    this.RaisePropertyChanged("PostTasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.Result[] Results {
            get {
                return this.ResultsField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultsField, value) != true)) {
                    this.ResultsField = value;
                    this.RaisePropertyChanged("Results");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskUnit", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    [System.SerializableAttribute()]
    public partial class TaskUnit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.ECommand[] CommandsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasTraceLogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasTransactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.ECommand[] Commands {
            get {
                return this.CommandsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandsField, value) != true)) {
                    this.CommandsField = value;
                    this.RaisePropertyChanged("Commands");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasTraceLog {
            get {
                return this.HasTraceLogField;
            }
            set {
                if ((this.HasTraceLogField.Equals(value) != true)) {
                    this.HasTraceLogField = value;
                    this.RaisePropertyChanged("HasTraceLog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasTransaction {
            get {
                return this.HasTransactionField;
            }
            set {
                if ((this.HasTransactionField.Equals(value) != true)) {
                    this.HasTransactionField = value;
                    this.RaisePropertyChanged("HasTransaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmlPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueFromFieldField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubXmlPathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandName {
            get {
                return this.CommandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandNameField, value) != true)) {
                    this.CommandNameField = value;
                    this.RaisePropertyChanged("CommandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XmlPath {
            get {
                return this.XmlPathField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlPathField, value) != true)) {
                    this.XmlPathField = value;
                    this.RaisePropertyChanged("XmlPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string ValueFromField {
            get {
                return this.ValueFromFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueFromFieldField, value) != true)) {
                    this.ValueFromFieldField = value;
                    this.RaisePropertyChanged("ValueFromField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string SubXmlPath {
            get {
                return this.SubXmlPathField;
            }
            set {
                if ((object.ReferenceEquals(this.SubXmlPathField, value) != true)) {
                    this.SubXmlPathField = value;
                    this.RaisePropertyChanged("SubXmlPath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string PrimaryKey {
            get {
                return this.PrimaryKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryKeyField, value) != true)) {
                    this.PrimaryKeyField = value;
                    this.RaisePropertyChanged("PrimaryKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ECommand", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    [System.SerializableAttribute()]
    public partial class ECommand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.ECommandType CommandTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterValueFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParameterValueOjbectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.EParameter[] ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.SourceType SourceTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandName {
            get {
                return this.CommandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandNameField, value) != true)) {
                    this.CommandNameField = value;
                    this.RaisePropertyChanged("CommandName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandText {
            get {
                return this.CommandTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandTextField, value) != true)) {
                    this.CommandTextField = value;
                    this.RaisePropertyChanged("CommandText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.ECommandType CommandType {
            get {
                return this.CommandTypeField;
            }
            set {
                if ((this.CommandTypeField.Equals(value) != true)) {
                    this.CommandTypeField = value;
                    this.RaisePropertyChanged("CommandType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasResult {
            get {
                return this.HasResultField;
            }
            set {
                if ((this.HasResultField.Equals(value) != true)) {
                    this.HasResultField = value;
                    this.RaisePropertyChanged("HasResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParameterValue {
            get {
                return this.ParameterValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterValueField, value) != true)) {
                    this.ParameterValueField = value;
                    this.RaisePropertyChanged("ParameterValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParameterValueFrom {
            get {
                return this.ParameterValueFromField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterValueFromField, value) != true)) {
                    this.ParameterValueFromField = value;
                    this.RaisePropertyChanged("ParameterValueFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParameterValueOjbectName {
            get {
                return this.ParameterValueOjbectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParameterValueOjbectNameField, value) != true)) {
                    this.ParameterValueOjbectNameField = value;
                    this.RaisePropertyChanged("ParameterValueOjbectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.EParameter[] Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceLink {
            get {
                return this.SourceLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceLinkField, value) != true)) {
                    this.SourceLinkField = value;
                    this.RaisePropertyChanged("SourceLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.SourceType SourceType {
            get {
                return this.SourceTypeField;
            }
            set {
                if ((this.SourceTypeField.Equals(value) != true)) {
                    this.SourceTypeField = value;
                    this.RaisePropertyChanged("SourceType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ECommandType", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    public enum ECommandType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TableDirect = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StoredProcedure = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Get = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Post = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EParameter", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    [System.SerializableAttribute()]
    public partial class EParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SourceType", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    public enum SourceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SqlServer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Oracle = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MySql = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DB2 = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sybase = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Http = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tcp = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DLL = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Table", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(MDT.DataProducer.ServiceImplement.DataProducerCenter.RelatedTable))]
    public partial class Table : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.EColumn PKColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.EColumn[] ColumnsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.RelatedTable[] RelatedTablesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalWhereField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostStoredProcedureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.EColumn PKColumn {
            get {
                return this.PKColumnField;
            }
            set {
                if ((object.ReferenceEquals(this.PKColumnField, value) != true)) {
                    this.PKColumnField = value;
                    this.RaisePropertyChanged("PKColumn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.EColumn[] Columns {
            get {
                return this.ColumnsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnsField, value) != true)) {
                    this.ColumnsField = value;
                    this.RaisePropertyChanged("Columns");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.RelatedTable[] RelatedTables {
            get {
                return this.RelatedTablesField;
            }
            set {
                if ((object.ReferenceEquals(this.RelatedTablesField, value) != true)) {
                    this.RelatedTablesField = value;
                    this.RaisePropertyChanged("RelatedTables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string AdditionalWhere {
            get {
                return this.AdditionalWhereField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalWhereField, value) != true)) {
                    this.AdditionalWhereField = value;
                    this.RaisePropertyChanged("AdditionalWhere");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string PostStoredProcedure {
            get {
                return this.PostStoredProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.PostStoredProcedureField, value) != true)) {
                    this.PostStoredProcedureField = value;
                    this.RaisePropertyChanged("PostStoredProcedure");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EColumn", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    [System.SerializableAttribute()]
    public partial class EColumn : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RelatedTable", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    [System.SerializableAttribute()]
    public partial class RelatedTable : MDT.DataProducer.ServiceImplement.DataProducerCenter.Table {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.EColumn ForeignColumnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.EColumn ForeignColumn {
            get {
                return this.ForeignColumnField;
            }
            set {
                if ((object.ReferenceEquals(this.ForeignColumnField, value) != true)) {
                    this.ForeignColumnField = value;
                    this.RaisePropertyChanged("ForeignColumn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskInfo", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    [System.SerializableAttribute()]
    public partial class TaskInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MappingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.TaskUnit[] PostTasksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SourceXSD_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TargetXSD_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MDT.DataProducer.ServiceImplement.DataProducerCenter.TaskType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XSLTInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enable {
            get {
                return this.EnableField;
            }
            set {
                if ((this.EnableField.Equals(value) != true)) {
                    this.EnableField = value;
                    this.RaisePropertyChanged("Enable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mapping {
            get {
                return this.MappingField;
            }
            set {
                if ((object.ReferenceEquals(this.MappingField, value) != true)) {
                    this.MappingField = value;
                    this.RaisePropertyChanged("Mapping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.TaskUnit[] PostTasks {
            get {
                return this.PostTasksField;
            }
            set {
                if ((object.ReferenceEquals(this.PostTasksField, value) != true)) {
                    this.PostTasksField = value;
                    this.RaisePropertyChanged("PostTasks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceXSD_ID {
            get {
                return this.SourceXSD_IDField;
            }
            set {
                if ((this.SourceXSD_IDField.Equals(value) != true)) {
                    this.SourceXSD_IDField = value;
                    this.RaisePropertyChanged("SourceXSD_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TargetXSD_ID {
            get {
                return this.TargetXSD_IDField;
            }
            set {
                if ((this.TargetXSD_IDField.Equals(value) != true)) {
                    this.TargetXSD_IDField = value;
                    this.RaisePropertyChanged("TargetXSD_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.TaskType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XSLTInfo {
            get {
                return this.XSLTInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.XSLTInfoField, value) != true)) {
                    this.XSLTInfoField = value;
                    this.RaisePropertyChanged("XSLTInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskType", Namespace="http://schemas.datacontract.org/2004/07/MDT.ManageCenter.DataContract")]
    public enum TaskType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ET = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ST = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LT = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DataProducerCenter.IDataProducerCenterService")]
    public interface IDataProducerCenterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProducerCenterService/GetSourceInfo", ReplyAction="http://tempuri.org/IDataProducerCenterService/GetSourceInfoResponse")]
        MDT.DataProducer.ServiceImplement.DataProducerCenter.Source GetSourceInfo(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProducerCenterService/GetTableInfo", ReplyAction="http://tempuri.org/IDataProducerCenterService/GetTableInfoResponse")]
        MDT.DataProducer.ServiceImplement.DataProducerCenter.Table GetTableInfo(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProducerCenterService/GetSchema", ReplyAction="http://tempuri.org/IDataProducerCenterService/GetSchemaResponse")]
        string GetSchema(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProducerCenterService/GetXSLT", ReplyAction="http://tempuri.org/IDataProducerCenterService/GetXSLTResponse")]
        string GetXSLT(int taskId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataProducerCenterService/GetTasks", ReplyAction="http://tempuri.org/IDataProducerCenterService/GetTasksResponse")]
        MDT.DataProducer.ServiceImplement.DataProducerCenter.TaskInfo[] GetTasks(int clientId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataProducerCenterServiceChannel : MDT.DataProducer.ServiceImplement.DataProducerCenter.IDataProducerCenterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataProducerCenterServiceClient : System.ServiceModel.ClientBase<MDT.DataProducer.ServiceImplement.DataProducerCenter.IDataProducerCenterService>, MDT.DataProducer.ServiceImplement.DataProducerCenter.IDataProducerCenterService {
        
        public DataProducerCenterServiceClient() {
        }
        
        public DataProducerCenterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataProducerCenterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataProducerCenterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataProducerCenterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.Source GetSourceInfo(int taskId) {
            return base.Channel.GetSourceInfo(taskId);
        }
        
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.Table GetTableInfo(int taskId) {
            return base.Channel.GetTableInfo(taskId);
        }
        
        public string GetSchema(int taskId) {
            return base.Channel.GetSchema(taskId);
        }
        
        public string GetXSLT(int taskId) {
            return base.Channel.GetXSLT(taskId);
        }
        
        public MDT.DataProducer.ServiceImplement.DataProducerCenter.TaskInfo[] GetTasks(int clientId) {
            return base.Channel.GetTasks(clientId);
        }
    }
}
