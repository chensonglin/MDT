//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "EClientETaskAllocation", "EClient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.EClient), "ETaskAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.ETaskAllocation), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "ETaskETaskAllocation", "ETask", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.ETask), "ETaskAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MDT.ManageCenter.DAL.ETaskAllocation), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "ESourceBaseInfoESource", "ESourceBaseInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.ESourceBaseInfo), "ESource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.ESource), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "ESourceESchema", "ESource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.ESource), "ESchema", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.ESchema), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "ESchemaETask", "ESchema", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.ESchema), "ETask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.ETask), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "EUserETask", "EUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.EUser), "ETask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.ETask), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "TraceLogMasterTraceLog", "TraceLogMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.TraceLogMaster), "TraceLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.TraceLog), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "ESchemaETask1", "ESchema", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.ESchema), "ETask", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.ETask), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "ETaskTraceLogMaster", "ETask", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.ETask), "TraceLogMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.TraceLogMaster), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "ETaskTraceLog", "ETask", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.ETask), "TraceLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.TraceLog), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "EUserEUserRole", "EUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.EUser), "EUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.EUserRole), true)]
[assembly: EdmRelationshipAttribute("ManageCenterDBModel", "ERoleEUserRole", "ERole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MDT.ManageCenter.DAL.ERole), "EUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MDT.ManageCenter.DAL.EUserRole), true)]

#endregion

namespace MDT.ManageCenter.DAL
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class ManageCenterDBEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“ManageCenterDBEntities”部分中的连接字符串初始化新 ManageCenterDBEntities 对象。
        /// </summary>
        public ManageCenterDBEntities() : base("name=ManageCenterDBEntities", "ManageCenterDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ManageCenterDBEntities 对象。
        /// </summary>
        public ManageCenterDBEntities(string connectionString) : base(connectionString, "ManageCenterDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ManageCenterDBEntities 对象。
        /// </summary>
        public ManageCenterDBEntities(EntityConnection connection) : base(connection, "ManageCenterDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<EClient> eclient
        {
            get
            {
                if ((_eclient == null))
                {
                    _eclient = base.CreateObjectSet<EClient>("eclient");
                }
                return _eclient;
            }
        }
        private ObjectSet<EClient> _eclient;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ESchema> eschema
        {
            get
            {
                if ((_eschema == null))
                {
                    _eschema = base.CreateObjectSet<ESchema>("eschema");
                }
                return _eschema;
            }
        }
        private ObjectSet<ESchema> _eschema;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ESource> esource
        {
            get
            {
                if ((_esource == null))
                {
                    _esource = base.CreateObjectSet<ESource>("esource");
                }
                return _esource;
            }
        }
        private ObjectSet<ESource> _esource;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ESourceBaseInfo> esourcebaseinfo
        {
            get
            {
                if ((_esourcebaseinfo == null))
                {
                    _esourcebaseinfo = base.CreateObjectSet<ESourceBaseInfo>("esourcebaseinfo");
                }
                return _esourcebaseinfo;
            }
        }
        private ObjectSet<ESourceBaseInfo> _esourcebaseinfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ETask> etask
        {
            get
            {
                if ((_etask == null))
                {
                    _etask = base.CreateObjectSet<ETask>("etask");
                }
                return _etask;
            }
        }
        private ObjectSet<ETask> _etask;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ETaskAllocation> etaskallocation
        {
            get
            {
                if ((_etaskallocation == null))
                {
                    _etaskallocation = base.CreateObjectSet<ETaskAllocation>("etaskallocation");
                }
                return _etaskallocation;
            }
        }
        private ObjectSet<ETaskAllocation> _etaskallocation;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<EUser> euser
        {
            get
            {
                if ((_euser == null))
                {
                    _euser = base.CreateObjectSet<EUser>("euser");
                }
                return _euser;
            }
        }
        private ObjectSet<EUser> _euser;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<NoticeAllocate> noticeallocate
        {
            get
            {
                if ((_noticeallocate == null))
                {
                    _noticeallocate = base.CreateObjectSet<NoticeAllocate>("noticeallocate");
                }
                return _noticeallocate;
            }
        }
        private ObjectSet<NoticeAllocate> _noticeallocate;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<NoticeReceiver> noticereceiver
        {
            get
            {
                if ((_noticereceiver == null))
                {
                    _noticereceiver = base.CreateObjectSet<NoticeReceiver>("noticereceiver");
                }
                return _noticereceiver;
            }
        }
        private ObjectSet<NoticeReceiver> _noticereceiver;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TraceLog> tracelog
        {
            get
            {
                if ((_tracelog == null))
                {
                    _tracelog = base.CreateObjectSet<TraceLog>("tracelog");
                }
                return _tracelog;
            }
        }
        private ObjectSet<TraceLog> _tracelog;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<TraceLogMaster> tracelogmaster
        {
            get
            {
                if ((_tracelogmaster == null))
                {
                    _tracelogmaster = base.CreateObjectSet<TraceLogMaster>("tracelogmaster");
                }
                return _tracelogmaster;
            }
        }
        private ObjectSet<TraceLogMaster> _tracelogmaster;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ERole> erole
        {
            get
            {
                if ((_erole == null))
                {
                    _erole = base.CreateObjectSet<ERole>("erole");
                }
                return _erole;
            }
        }
        private ObjectSet<ERole> _erole;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<EUserRole> euserrole
        {
            get
            {
                if ((_euserrole == null))
                {
                    _euserrole = base.CreateObjectSet<EUserRole>("euserrole");
                }
                return _euserrole;
            }
        }
        private ObjectSet<EUserRole> _euserrole;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 eclient EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToeclient(EClient eClient)
        {
            base.AddObject("eclient", eClient);
        }
    
        /// <summary>
        /// 用于向 eschema EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToeschema(ESchema eSchema)
        {
            base.AddObject("eschema", eSchema);
        }
    
        /// <summary>
        /// 用于向 esource EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToesource(ESource eSource)
        {
            base.AddObject("esource", eSource);
        }
    
        /// <summary>
        /// 用于向 esourcebaseinfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToesourcebaseinfo(ESourceBaseInfo eSourceBaseInfo)
        {
            base.AddObject("esourcebaseinfo", eSourceBaseInfo);
        }
    
        /// <summary>
        /// 用于向 etask EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToetask(ETask eTask)
        {
            base.AddObject("etask", eTask);
        }
    
        /// <summary>
        /// 用于向 etaskallocation EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToetaskallocation(ETaskAllocation eTaskAllocation)
        {
            base.AddObject("etaskallocation", eTaskAllocation);
        }
    
        /// <summary>
        /// 用于向 euser EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToeuser(EUser eUser)
        {
            base.AddObject("euser", eUser);
        }
    
        /// <summary>
        /// 用于向 noticeallocate EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTonoticeallocate(NoticeAllocate noticeAllocate)
        {
            base.AddObject("noticeallocate", noticeAllocate);
        }
    
        /// <summary>
        /// 用于向 noticereceiver EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTonoticereceiver(NoticeReceiver noticeReceiver)
        {
            base.AddObject("noticereceiver", noticeReceiver);
        }
    
        /// <summary>
        /// 用于向 tracelog EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotracelog(TraceLog traceLog)
        {
            base.AddObject("tracelog", traceLog);
        }
    
        /// <summary>
        /// 用于向 tracelogmaster EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddTotracelogmaster(TraceLogMaster traceLogMaster)
        {
            base.AddObject("tracelogmaster", traceLogMaster);
        }
    
        /// <summary>
        /// 用于向 erole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToerole(ERole eRole)
        {
            base.AddObject("erole", eRole);
        }
    
        /// <summary>
        /// 用于向 euserrole EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToeuserrole(EUserRole eUserRole)
        {
            base.AddObject("euserrole", eUserRole);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="EClient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EClient : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 EClient 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="serverIP">ServerIP 属性的初始值。</param>
        public static EClient CreateEClient(global::System.Int32 id, global::System.String name, global::System.String serverIP)
        {
            EClient eClient = new EClient();
            eClient.ID = id;
            eClient.Name = name;
            eClient.ServerIP = serverIP;
            return eClient;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerIP
        {
            get
            {
                return _ServerIP;
            }
            set
            {
                OnServerIPChanging(value);
                ReportPropertyChanging("ServerIP");
                _ServerIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerIP");
                OnServerIPChanged();
            }
        }
        private global::System.String _ServerIP;
        partial void OnServerIPChanging(global::System.String value);
        partial void OnServerIPChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "EClientETaskAllocation", "ETaskAllocation")]
        public EntityCollection<ETaskAllocation> ETaskAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ETaskAllocation>("ManageCenterDBModel.EClientETaskAllocation", "ETaskAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ETaskAllocation>("ManageCenterDBModel.EClientETaskAllocation", "ETaskAllocation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="ERole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ERole : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ERole 对象。
        /// </summary>
        /// <param name="roleId">RoleId 属性的初始值。</param>
        /// <param name="roleName">RoleName 属性的初始值。</param>
        public static ERole CreateERole(global::System.Int32 roleId, global::System.String roleName)
        {
            ERole eRole = new ERole();
            eRole.RoleId = roleId;
            eRole.RoleName = roleName;
            return eRole;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoleType
        {
            get
            {
                return _RoleType;
            }
            set
            {
                OnRoleTypeChanging(value);
                ReportPropertyChanging("RoleType");
                _RoleType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleType");
                OnRoleTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _RoleType;
        partial void OnRoleTypeChanging(Nullable<global::System.Int32> value);
        partial void OnRoleTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleDesc
        {
            get
            {
                return _RoleDesc;
            }
            set
            {
                OnRoleDescChanging(value);
                ReportPropertyChanging("RoleDesc");
                _RoleDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RoleDesc");
                OnRoleDescChanged();
            }
        }
        private global::System.String _RoleDesc;
        partial void OnRoleDescChanging(global::System.String value);
        partial void OnRoleDescChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ERoleEUserRole", "EUserRole")]
        public EntityCollection<EUserRole> EUserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EUserRole>("ManageCenterDBModel.ERoleEUserRole", "EUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EUserRole>("ManageCenterDBModel.ERoleEUserRole", "EUserRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="ESchema")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ESchema : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ESchema 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="eSource_ID">ESource_ID 属性的初始值。</param>
        /// <param name="type">Type 属性的初始值。</param>
        public static ESchema CreateESchema(global::System.Int32 id, global::System.Int32 eSource_ID, global::System.Int32 type)
        {
            ESchema eSchema = new ESchema();
            eSchema.ID = id;
            eSchema.ESource_ID = eSource_ID;
            eSchema.Type = type;
            return eSchema;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESource_ID
        {
            get
            {
                return _ESource_ID;
            }
            set
            {
                OnESource_IDChanging(value);
                ReportPropertyChanging("ESource_ID");
                _ESource_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESource_ID");
                OnESource_IDChanged();
            }
        }
        private global::System.Int32 _ESource_ID;
        partial void OnESource_IDChanging(global::System.Int32 value);
        partial void OnESource_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Schema
        {
            get
            {
                return _Schema;
            }
            set
            {
                OnSchemaChanging(value);
                ReportPropertyChanging("Schema");
                _Schema = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Schema");
                OnSchemaChanged();
            }
        }
        private global::System.String _Schema;
        partial void OnSchemaChanging(global::System.String value);
        partial void OnSchemaChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ESourceESchema", "ESource")]
        public ESource ESource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESource>("ManageCenterDBModel.ESourceESchema", "ESource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESource>("ManageCenterDBModel.ESourceESchema", "ESource").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ESource> ESourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESource>("ManageCenterDBModel.ESourceESchema", "ESource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ESource>("ManageCenterDBModel.ESourceESchema", "ESource", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ESchemaETask", "ETask")]
        public EntityCollection<ETask> SourceETask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ETask>("ManageCenterDBModel.ESchemaETask", "ETask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ETask>("ManageCenterDBModel.ESchemaETask", "ETask", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ESchemaETask1", "ETask")]
        public EntityCollection<ETask> TargetETask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ETask>("ManageCenterDBModel.ESchemaETask1", "ETask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ETask>("ManageCenterDBModel.ESchemaETask1", "ETask", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="ESource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ESource : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ESource 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="eSourceBaseInfo_ID">ESourceBaseInfo_ID 属性的初始值。</param>
        public static ESource CreateESource(global::System.Int32 id, global::System.Int32 eSourceBaseInfo_ID)
        {
            ESource eSource = new ESource();
            eSource.ID = id;
            eSource.ESourceBaseInfo_ID = eSourceBaseInfo_ID;
            return eSource;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ESourceBaseInfo_ID
        {
            get
            {
                return _ESourceBaseInfo_ID;
            }
            set
            {
                OnESourceBaseInfo_IDChanging(value);
                ReportPropertyChanging("ESourceBaseInfo_ID");
                _ESourceBaseInfo_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ESourceBaseInfo_ID");
                OnESourceBaseInfo_IDChanged();
            }
        }
        private global::System.Int32 _ESourceBaseInfo_ID;
        partial void OnESourceBaseInfo_IDChanging(global::System.Int32 value);
        partial void OnESourceBaseInfo_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceConfig
        {
            get
            {
                return _SourceConfig;
            }
            set
            {
                OnSourceConfigChanging(value);
                ReportPropertyChanging("SourceConfig");
                _SourceConfig = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceConfig");
                OnSourceConfigChanged();
            }
        }
        private global::System.String _SourceConfig;
        partial void OnSourceConfigChanging(global::System.String value);
        partial void OnSourceConfigChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SourceType
        {
            get
            {
                return _SourceType;
            }
            set
            {
                OnSourceTypeChanging(value);
                ReportPropertyChanging("SourceType");
                _SourceType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SourceType");
                OnSourceTypeChanged();
            }
        }
        private global::System.String _SourceType;
        partial void OnSourceTypeChanging(global::System.String value);
        partial void OnSourceTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalConfig
        {
            get
            {
                return _OriginalConfig;
            }
            set
            {
                OnOriginalConfigChanging(value);
                ReportPropertyChanging("OriginalConfig");
                _OriginalConfig = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OriginalConfig");
                OnOriginalConfigChanged();
            }
        }
        private global::System.String _OriginalConfig;
        partial void OnOriginalConfigChanging(global::System.String value);
        partial void OnOriginalConfigChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ESourceBaseInfoESource", "ESourceBaseInfo")]
        public ESourceBaseInfo ESourceBaseInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESourceBaseInfo>("ManageCenterDBModel.ESourceBaseInfoESource", "ESourceBaseInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESourceBaseInfo>("ManageCenterDBModel.ESourceBaseInfoESource", "ESourceBaseInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ESourceBaseInfo> ESourceBaseInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESourceBaseInfo>("ManageCenterDBModel.ESourceBaseInfoESource", "ESourceBaseInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ESourceBaseInfo>("ManageCenterDBModel.ESourceBaseInfoESource", "ESourceBaseInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ESourceESchema", "ESchema")]
        public EntityCollection<ESchema> ESchema
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ESchema>("ManageCenterDBModel.ESourceESchema", "ESchema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ESchema>("ManageCenterDBModel.ESourceESchema", "ESchema", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="ESourceBaseInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ESourceBaseInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ESourceBaseInfo 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static ESourceBaseInfo CreateESourceBaseInfo(global::System.Int32 id)
        {
            ESourceBaseInfo eSourceBaseInfo = new ESourceBaseInfo();
            eSourceBaseInfo.ID = id;
            return eSourceBaseInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Config
        {
            get
            {
                return _Config;
            }
            set
            {
                OnConfigChanging(value);
                ReportPropertyChanging("Config");
                _Config = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Config");
                OnConfigChanged();
            }
        }
        private global::System.String _Config;
        partial void OnConfigChanging(global::System.String value);
        partial void OnConfigChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AliasName
        {
            get
            {
                return _AliasName;
            }
            set
            {
                OnAliasNameChanging(value);
                ReportPropertyChanging("AliasName");
                _AliasName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AliasName");
                OnAliasNameChanged();
            }
        }
        private global::System.String _AliasName;
        partial void OnAliasNameChanging(global::System.String value);
        partial void OnAliasNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ESourceBaseInfoESource", "ESource")]
        public EntityCollection<ESource> ESource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ESource>("ManageCenterDBModel.ESourceBaseInfoESource", "ESource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ESource>("ManageCenterDBModel.ESourceBaseInfoESource", "ESource", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="ETask")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ETask : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ETask 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="sourceESchema_ID">SourceESchema_ID 属性的初始值。</param>
        /// <param name="targetESchema_ID">TargetESchema_ID 属性的初始值。</param>
        /// <param name="enable">Enable 属性的初始值。</param>
        /// <param name="interval">Interval 属性的初始值。</param>
        /// <param name="operationID">OperationID 属性的初始值。</param>
        /// <param name="operationDate">OperationDate 属性的初始值。</param>
        public static ETask CreateETask(global::System.Int32 id, global::System.Int32 sourceESchema_ID, global::System.Int32 targetESchema_ID, global::System.Boolean enable, global::System.Int32 interval, global::System.Int32 operationID, global::System.DateTime operationDate)
        {
            ETask eTask = new ETask();
            eTask.ID = id;
            eTask.SourceESchema_ID = sourceESchema_ID;
            eTask.TargetESchema_ID = targetESchema_ID;
            eTask.Enable = enable;
            eTask.Interval = interval;
            eTask.OperationID = operationID;
            eTask.OperationDate = operationDate;
            return eTask;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceESchema_ID
        {
            get
            {
                return _SourceESchema_ID;
            }
            set
            {
                OnSourceESchema_IDChanging(value);
                ReportPropertyChanging("SourceESchema_ID");
                _SourceESchema_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceESchema_ID");
                OnSourceESchema_IDChanged();
            }
        }
        private global::System.Int32 _SourceESchema_ID;
        partial void OnSourceESchema_IDChanging(global::System.Int32 value);
        partial void OnSourceESchema_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TargetESchema_ID
        {
            get
            {
                return _TargetESchema_ID;
            }
            set
            {
                OnTargetESchema_IDChanging(value);
                ReportPropertyChanging("TargetESchema_ID");
                _TargetESchema_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TargetESchema_ID");
                OnTargetESchema_IDChanged();
            }
        }
        private global::System.Int32 _TargetESchema_ID;
        partial void OnTargetESchema_IDChanging(global::System.Int32 value);
        partial void OnTargetESchema_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaskName
        {
            get
            {
                return _TaskName;
            }
            set
            {
                OnTaskNameChanging(value);
                ReportPropertyChanging("TaskName");
                _TaskName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaskName");
                OnTaskNameChanged();
            }
        }
        private global::System.String _TaskName;
        partial void OnTaskNameChanging(global::System.String value);
        partial void OnTaskNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String XSLTInfo
        {
            get
            {
                return _XSLTInfo;
            }
            set
            {
                OnXSLTInfoChanging(value);
                ReportPropertyChanging("XSLTInfo");
                _XSLTInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("XSLTInfo");
                OnXSLTInfoChanged();
            }
        }
        private global::System.String _XSLTInfo;
        partial void OnXSLTInfoChanging(global::System.String value);
        partial void OnXSLTInfoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mapping
        {
            get
            {
                return _Mapping;
            }
            set
            {
                OnMappingChanging(value);
                ReportPropertyChanging("Mapping");
                _Mapping = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mapping");
                OnMappingChanged();
            }
        }
        private global::System.String _Mapping;
        partial void OnMappingChanging(global::System.String value);
        partial void OnMappingChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enable
        {
            get
            {
                return _Enable;
            }
            set
            {
                OnEnableChanging(value);
                ReportPropertyChanging("Enable");
                _Enable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enable");
                OnEnableChanged();
            }
        }
        private global::System.Boolean _Enable;
        partial void OnEnableChanging(global::System.Boolean value);
        partial void OnEnableChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Interval
        {
            get
            {
                return _Interval;
            }
            set
            {
                OnIntervalChanging(value);
                ReportPropertyChanging("Interval");
                _Interval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Interval");
                OnIntervalChanged();
            }
        }
        private global::System.Int32 _Interval;
        partial void OnIntervalChanging(global::System.Int32 value);
        partial void OnIntervalChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OperationID
        {
            get
            {
                return _OperationID;
            }
            set
            {
                OnOperationIDChanging(value);
                ReportPropertyChanging("OperationID");
                _OperationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationID");
                OnOperationIDChanged();
            }
        }
        private global::System.Int32 _OperationID;
        partial void OnOperationIDChanging(global::System.Int32 value);
        partial void OnOperationIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OperationDate
        {
            get
            {
                return _OperationDate;
            }
            set
            {
                OnOperationDateChanging(value);
                ReportPropertyChanging("OperationDate");
                _OperationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationDate");
                OnOperationDateChanged();
            }
        }
        private global::System.DateTime _OperationDate;
        partial void OnOperationDateChanging(global::System.DateTime value);
        partial void OnOperationDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ETaskETaskAllocation", "ETaskAllocation")]
        public ETaskAllocation ETaskAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETaskAllocation>("ManageCenterDBModel.ETaskETaskAllocation", "ETaskAllocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETaskAllocation>("ManageCenterDBModel.ETaskETaskAllocation", "ETaskAllocation").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ETaskAllocation> ETaskAllocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETaskAllocation>("ManageCenterDBModel.ETaskETaskAllocation", "ETaskAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ETaskAllocation>("ManageCenterDBModel.ETaskETaskAllocation", "ETaskAllocation", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ESchemaETask", "ESchema")]
        public ESchema SourceESchema
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESchema>("ManageCenterDBModel.ESchemaETask", "ESchema").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESchema>("ManageCenterDBModel.ESchemaETask", "ESchema").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ESchema> SourceESchemaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESchema>("ManageCenterDBModel.ESchemaETask", "ESchema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ESchema>("ManageCenterDBModel.ESchemaETask", "ESchema", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "EUserETask", "EUser")]
        public EUser EUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EUser>("ManageCenterDBModel.EUserETask", "EUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EUser>("ManageCenterDBModel.EUserETask", "EUser").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EUser> EUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EUser>("ManageCenterDBModel.EUserETask", "EUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EUser>("ManageCenterDBModel.EUserETask", "EUser", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ESchemaETask1", "ESchema")]
        public ESchema TargetESchema
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESchema>("ManageCenterDBModel.ESchemaETask1", "ESchema").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESchema>("ManageCenterDBModel.ESchemaETask1", "ESchema").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ESchema> TargetESchemaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ESchema>("ManageCenterDBModel.ESchemaETask1", "ESchema");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ESchema>("ManageCenterDBModel.ESchemaETask1", "ESchema", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ETaskTraceLogMaster", "TraceLogMaster")]
        public EntityCollection<TraceLogMaster> TraceLogMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TraceLogMaster>("ManageCenterDBModel.ETaskTraceLogMaster", "TraceLogMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TraceLogMaster>("ManageCenterDBModel.ETaskTraceLogMaster", "TraceLogMaster", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ETaskTraceLog", "TraceLog")]
        public EntityCollection<TraceLog> TraceLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TraceLog>("ManageCenterDBModel.ETaskTraceLog", "TraceLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TraceLog>("ManageCenterDBModel.ETaskTraceLog", "TraceLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="ETaskAllocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ETaskAllocation : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ETaskAllocation 对象。
        /// </summary>
        /// <param name="eTask_ID">ETask_ID 属性的初始值。</param>
        /// <param name="eClient_ID">EClient_ID 属性的初始值。</param>
        public static ETaskAllocation CreateETaskAllocation(global::System.Int32 eTask_ID, global::System.Int32 eClient_ID)
        {
            ETaskAllocation eTaskAllocation = new ETaskAllocation();
            eTaskAllocation.ETask_ID = eTask_ID;
            eTaskAllocation.EClient_ID = eClient_ID;
            return eTaskAllocation;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETask_ID
        {
            get
            {
                return _ETask_ID;
            }
            set
            {
                if (_ETask_ID != value)
                {
                    OnETask_IDChanging(value);
                    ReportPropertyChanging("ETask_ID");
                    _ETask_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ETask_ID");
                    OnETask_IDChanged();
                }
            }
        }
        private global::System.Int32 _ETask_ID;
        partial void OnETask_IDChanging(global::System.Int32 value);
        partial void OnETask_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EClient_ID
        {
            get
            {
                return _EClient_ID;
            }
            set
            {
                OnEClient_IDChanging(value);
                ReportPropertyChanging("EClient_ID");
                _EClient_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EClient_ID");
                OnEClient_IDChanged();
            }
        }
        private global::System.Int32 _EClient_ID;
        partial void OnEClient_IDChanging(global::System.Int32 value);
        partial void OnEClient_IDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "EClientETaskAllocation", "EClient")]
        public EClient EClient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EClient>("ManageCenterDBModel.EClientETaskAllocation", "EClient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EClient>("ManageCenterDBModel.EClientETaskAllocation", "EClient").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EClient> EClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EClient>("ManageCenterDBModel.EClientETaskAllocation", "EClient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EClient>("ManageCenterDBModel.EClientETaskAllocation", "EClient", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ETaskETaskAllocation", "ETask")]
        public ETask ETask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETask>("ManageCenterDBModel.ETaskETaskAllocation", "ETask").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETask>("ManageCenterDBModel.ETaskETaskAllocation", "ETask").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ETask> ETaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETask>("ManageCenterDBModel.ETaskETaskAllocation", "ETask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ETask>("ManageCenterDBModel.ETaskETaskAllocation", "ETask", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="EUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EUser : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 EUser 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        public static EUser CreateEUser(global::System.Int32 userID, global::System.String userName)
        {
            EUser eUser = new EUser();
            eUser.UserID = userID;
            eUser.UserName = userName;
            return eUser;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserPassword
        {
            get
            {
                return _UserPassword;
            }
            set
            {
                OnUserPasswordChanging(value);
                ReportPropertyChanging("UserPassword");
                _UserPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserPassword");
                OnUserPasswordChanged();
            }
        }
        private global::System.String _UserPassword;
        partial void OnUserPasswordChanging(global::System.String value);
        partial void OnUserPasswordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserEmail
        {
            get
            {
                return _UserEmail;
            }
            set
            {
                OnUserEmailChanging(value);
                ReportPropertyChanging("UserEmail");
                _UserEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserEmail");
                OnUserEmailChanged();
            }
        }
        private global::System.String _UserEmail;
        partial void OnUserEmailChanging(global::System.String value);
        partial void OnUserEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LoginTime
        {
            get
            {
                return _LoginTime;
            }
            set
            {
                OnLoginTimeChanging(value);
                ReportPropertyChanging("LoginTime");
                _LoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginTime");
                OnLoginTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LoginTime;
        partial void OnLoginTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLoginTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginIP
        {
            get
            {
                return _LoginIP;
            }
            set
            {
                OnLoginIPChanging(value);
                ReportPropertyChanging("LoginIP");
                _LoginIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoginIP");
                OnLoginIPChanged();
            }
        }
        private global::System.String _LoginIP;
        partial void OnLoginIPChanging(global::System.String value);
        partial void OnLoginIPChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserType
        {
            get
            {
                return _UserType;
            }
            set
            {
                OnUserTypeChanging(value);
                ReportPropertyChanging("UserType");
                _UserType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserType");
                OnUserTypeChanged();
            }
        }
        private global::System.String _UserType;
        partial void OnUserTypeChanging(global::System.String value);
        partial void OnUserTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HostName
        {
            get
            {
                return _HostName;
            }
            set
            {
                OnHostNameChanging(value);
                ReportPropertyChanging("HostName");
                _HostName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HostName");
                OnHostNameChanged();
            }
        }
        private global::System.String _HostName;
        partial void OnHostNameChanging(global::System.String value);
        partial void OnHostNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MacAddress
        {
            get
            {
                return _MacAddress;
            }
            set
            {
                OnMacAddressChanging(value);
                ReportPropertyChanging("MacAddress");
                _MacAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MacAddress");
                OnMacAddressChanged();
            }
        }
        private global::System.String _MacAddress;
        partial void OnMacAddressChanging(global::System.String value);
        partial void OnMacAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NoWebLastVisitTime
        {
            get
            {
                return _NoWebLastVisitTime;
            }
            set
            {
                OnNoWebLastVisitTimeChanging(value);
                ReportPropertyChanging("NoWebLastVisitTime");
                _NoWebLastVisitTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoWebLastVisitTime");
                OnNoWebLastVisitTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _NoWebLastVisitTime;
        partial void OnNoWebLastVisitTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnNoWebLastVisitTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreateBy
        {
            get
            {
                return _CreateBy;
            }
            set
            {
                OnCreateByChanging(value);
                ReportPropertyChanging("CreateBy");
                _CreateBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreateBy");
                OnCreateByChanged();
            }
        }
        private global::System.String _CreateBy;
        partial void OnCreateByChanging(global::System.String value);
        partial void OnCreateByChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private global::System.String _IsLocked;
        partial void OnIsLockedChanging(global::System.String value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NoWebVisitIP
        {
            get
            {
                return _NoWebVisitIP;
            }
            set
            {
                OnNoWebVisitIPChanging(value);
                ReportPropertyChanging("NoWebVisitIP");
                _NoWebVisitIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NoWebVisitIP");
                OnNoWebVisitIPChanged();
            }
        }
        private global::System.String _NoWebVisitIP;
        partial void OnNoWebVisitIPChanging(global::System.String value);
        partial void OnNoWebVisitIPChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "EUserETask", "ETask")]
        public EntityCollection<ETask> ETask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ETask>("ManageCenterDBModel.EUserETask", "ETask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ETask>("ManageCenterDBModel.EUserETask", "ETask", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "EUserEUserRole", "EUserRole")]
        public EntityCollection<EUserRole> EUserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EUserRole>("ManageCenterDBModel.EUserEUserRole", "EUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EUserRole>("ManageCenterDBModel.EUserEUserRole", "EUserRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="EUserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EUserRole : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 EUserRole 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="roleId">RoleId 属性的初始值。</param>
        public static EUserRole CreateEUserRole(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 roleId)
        {
            EUserRole eUserRole = new EUserRole();
            eUserRole.ID = id;
            eUserRole.UserId = userId;
            eUserRole.RoleId = roleId;
            return eUserRole;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "EUserEUserRole", "EUser")]
        public EUser EUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EUser>("ManageCenterDBModel.EUserEUserRole", "EUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EUser>("ManageCenterDBModel.EUserEUserRole", "EUser").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EUser> EUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EUser>("ManageCenterDBModel.EUserEUserRole", "EUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EUser>("ManageCenterDBModel.EUserEUserRole", "EUser", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ERoleEUserRole", "ERole")]
        public ERole ERole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ERole>("ManageCenterDBModel.ERoleEUserRole", "ERole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ERole>("ManageCenterDBModel.ERoleEUserRole", "ERole").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ERole> ERoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ERole>("ManageCenterDBModel.ERoleEUserRole", "ERole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ERole>("ManageCenterDBModel.ERoleEUserRole", "ERole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="NoticeAllocate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NoticeAllocate : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 NoticeAllocate 对象。
        /// </summary>
        /// <param name="nid">nid 属性的初始值。</param>
        public static NoticeAllocate CreateNoticeAllocate(global::System.Int32 nid)
        {
            NoticeAllocate noticeAllocate = new NoticeAllocate();
            noticeAllocate.nid = nid;
            return noticeAllocate;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 nid
        {
            get
            {
                return _nid;
            }
            set
            {
                if (_nid != value)
                {
                    OnnidChanging(value);
                    ReportPropertyChanging("nid");
                    _nid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("nid");
                    OnnidChanged();
                }
            }
        }
        private global::System.Int32 _nid;
        partial void OnnidChanging(global::System.Int32 value);
        partial void OnnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> etaskId
        {
            get
            {
                return _etaskId;
            }
            set
            {
                OnetaskIdChanging(value);
                ReportPropertyChanging("etaskId");
                _etaskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("etaskId");
                OnetaskIdChanged();
            }
        }
        private Nullable<global::System.Int32> _etaskId;
        partial void OnetaskIdChanging(Nullable<global::System.Int32> value);
        partial void OnetaskIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> noticeMode
        {
            get
            {
                return _noticeMode;
            }
            set
            {
                OnnoticeModeChanging(value);
                ReportPropertyChanging("noticeMode");
                _noticeMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("noticeMode");
                OnnoticeModeChanged();
            }
        }
        private Nullable<global::System.Int32> _noticeMode;
        partial void OnnoticeModeChanging(Nullable<global::System.Int32> value);
        partial void OnnoticeModeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> receiverID
        {
            get
            {
                return _receiverID;
            }
            set
            {
                OnreceiverIDChanging(value);
                ReportPropertyChanging("receiverID");
                _receiverID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("receiverID");
                OnreceiverIDChanged();
            }
        }
        private Nullable<global::System.Int32> _receiverID;
        partial void OnreceiverIDChanging(Nullable<global::System.Int32> value);
        partial void OnreceiverIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> enable
        {
            get
            {
                return _enable;
            }
            set
            {
                OnenableChanging(value);
                ReportPropertyChanging("enable");
                _enable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("enable");
                OnenableChanged();
            }
        }
        private Nullable<global::System.Int32> _enable;
        partial void OnenableChanging(Nullable<global::System.Int32> value);
        partial void OnenableChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="NoticeReceiver")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NoticeReceiver : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 NoticeReceiver 对象。
        /// </summary>
        /// <param name="uid">uid 属性的初始值。</param>
        public static NoticeReceiver CreateNoticeReceiver(global::System.Int32 uid)
        {
            NoticeReceiver noticeReceiver = new NoticeReceiver();
            noticeReceiver.uid = uid;
            return noticeReceiver;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 uid
        {
            get
            {
                return _uid;
            }
            set
            {
                if (_uid != value)
                {
                    OnuidChanging(value);
                    ReportPropertyChanging("uid");
                    _uid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("uid");
                    OnuidChanged();
                }
            }
        }
        private global::System.Int32 _uid;
        partial void OnuidChanging(global::System.Int32 value);
        partial void OnuidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String phone
        {
            get
            {
                return _phone;
            }
            set
            {
                OnphoneChanging(value);
                ReportPropertyChanging("phone");
                _phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("phone");
                OnphoneChanged();
            }
        }
        private global::System.String _phone;
        partial void OnphoneChanging(global::System.String value);
        partial void OnphoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> enable
        {
            get
            {
                return _enable;
            }
            set
            {
                OnenableChanging(value);
                ReportPropertyChanging("enable");
                _enable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("enable");
                OnenableChanged();
            }
        }
        private Nullable<global::System.Int32> _enable;
        partial void OnenableChanging(Nullable<global::System.Int32> value);
        partial void OnenableChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String remark
        {
            get
            {
                return _remark;
            }
            set
            {
                OnremarkChanging(value);
                ReportPropertyChanging("remark");
                _remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("remark");
                OnremarkChanged();
            }
        }
        private global::System.String _remark;
        partial void OnremarkChanging(global::System.String value);
        partial void OnremarkChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="TraceLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TraceLog : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TraceLog 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="eTask_ID">ETask_ID 属性的初始值。</param>
        /// <param name="traceLogMaster_ID">TraceLogMaster_ID 属性的初始值。</param>
        /// <param name="startTime">StartTime 属性的初始值。</param>
        public static TraceLog CreateTraceLog(global::System.Int32 id, global::System.Int32 eTask_ID, global::System.String traceLogMaster_ID, global::System.DateTime startTime)
        {
            TraceLog traceLog = new TraceLog();
            traceLog.ID = id;
            traceLog.ETask_ID = eTask_ID;
            traceLog.TraceLogMaster_ID = traceLogMaster_ID;
            traceLog.StartTime = startTime;
            return traceLog;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETask_ID
        {
            get
            {
                return _ETask_ID;
            }
            set
            {
                OnETask_IDChanging(value);
                ReportPropertyChanging("ETask_ID");
                _ETask_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ETask_ID");
                OnETask_IDChanged();
            }
        }
        private global::System.Int32 _ETask_ID;
        partial void OnETask_IDChanging(global::System.Int32 value);
        partial void OnETask_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubTask_ID
        {
            get
            {
                return _SubTask_ID;
            }
            set
            {
                OnSubTask_IDChanging(value);
                ReportPropertyChanging("SubTask_ID");
                _SubTask_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubTask_ID");
                OnSubTask_IDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubTask_ID;
        partial void OnSubTask_IDChanging(Nullable<global::System.Int32> value);
        partial void OnSubTask_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TraceLogMaster_ID
        {
            get
            {
                return _TraceLogMaster_ID;
            }
            set
            {
                OnTraceLogMaster_IDChanging(value);
                ReportPropertyChanging("TraceLogMaster_ID");
                _TraceLogMaster_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TraceLogMaster_ID");
                OnTraceLogMaster_IDChanged();
            }
        }
        private global::System.String _TraceLogMaster_ID;
        partial void OnTraceLogMaster_IDChanging(global::System.String value);
        partial void OnTraceLogMaster_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Stage
        {
            get
            {
                return _Stage;
            }
            set
            {
                OnStageChanging(value);
                ReportPropertyChanging("Stage");
                _Stage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Stage");
                OnStageChanged();
            }
        }
        private global::System.String _Stage;
        partial void OnStageChanging(global::System.String value);
        partial void OnStageChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RunInfo
        {
            get
            {
                return _RunInfo;
            }
            set
            {
                OnRunInfoChanging(value);
                ReportPropertyChanging("RunInfo");
                _RunInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RunInfo");
                OnRunInfoChanged();
            }
        }
        private global::System.String _RunInfo;
        partial void OnRunInfoChanging(global::System.String value);
        partial void OnRunInfoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "TraceLogMasterTraceLog", "TraceLogMaster")]
        public TraceLogMaster TraceLogMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TraceLogMaster>("ManageCenterDBModel.TraceLogMasterTraceLog", "TraceLogMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TraceLogMaster>("ManageCenterDBModel.TraceLogMasterTraceLog", "TraceLogMaster").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TraceLogMaster> TraceLogMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TraceLogMaster>("ManageCenterDBModel.TraceLogMasterTraceLog", "TraceLogMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TraceLogMaster>("ManageCenterDBModel.TraceLogMasterTraceLog", "TraceLogMaster", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ETaskTraceLog", "ETask")]
        public ETask ETask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETask>("ManageCenterDBModel.ETaskTraceLog", "ETask").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETask>("ManageCenterDBModel.ETaskTraceLog", "ETask").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ETask> ETaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETask>("ManageCenterDBModel.ETaskTraceLog", "ETask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ETask>("ManageCenterDBModel.ETaskTraceLog", "ETask", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ManageCenterDBModel", Name="TraceLogMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TraceLogMaster : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 TraceLogMaster 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="eTask_ID">ETask_ID 属性的初始值。</param>
        /// <param name="startTime">StartTime 属性的初始值。</param>
        public static TraceLogMaster CreateTraceLogMaster(global::System.String id, global::System.Int32 eTask_ID, global::System.DateTime startTime)
        {
            TraceLogMaster traceLogMaster = new TraceLogMaster();
            traceLogMaster.ID = id;
            traceLogMaster.ETask_ID = eTask_ID;
            traceLogMaster.StartTime = startTime;
            return traceLogMaster;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ETask_ID
        {
            get
            {
                return _ETask_ID;
            }
            set
            {
                OnETask_IDChanging(value);
                ReportPropertyChanging("ETask_ID");
                _ETask_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ETask_ID");
                OnETask_IDChanged();
            }
        }
        private global::System.Int32 _ETask_ID;
        partial void OnETask_IDChanging(global::System.Int32 value);
        partial void OnETask_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DataCount
        {
            get
            {
                return _DataCount;
            }
            set
            {
                OnDataCountChanging(value);
                ReportPropertyChanging("DataCount");
                _DataCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataCount");
                OnDataCountChanged();
            }
        }
        private Nullable<global::System.Int32> _DataCount;
        partial void OnDataCountChanging(Nullable<global::System.Int32> value);
        partial void OnDataCountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.DateTime _StartTime;
        partial void OnStartTimeChanging(global::System.DateTime value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndTime;
        partial void OnEndTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "TraceLogMasterTraceLog", "TraceLog")]
        public EntityCollection<TraceLog> TraceLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TraceLog>("ManageCenterDBModel.TraceLogMasterTraceLog", "TraceLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TraceLog>("ManageCenterDBModel.TraceLogMasterTraceLog", "TraceLog", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ManageCenterDBModel", "ETaskTraceLogMaster", "ETask")]
        public ETask ETask
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETask>("ManageCenterDBModel.ETaskTraceLogMaster", "ETask").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETask>("ManageCenterDBModel.ETaskTraceLogMaster", "ETask").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ETask> ETaskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ETask>("ManageCenterDBModel.ETaskTraceLogMaster", "ETask");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ETask>("ManageCenterDBModel.ETaskTraceLogMaster", "ETask", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
